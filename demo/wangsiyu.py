# 要安装的
from selenium import webdriver
import psutil
import requests

# 不要安装的
from time import sleep
import json
import datetime
import hashlib
import threading

# 是否需要登录
need_login = True

# 地图页地址
# home_addr='http://zhsq.digitalcq.com/cqstcphome'
# map_addr='http://zhsq.digitalcq.com/cqstcphome/#/e-map/index'

home_addr = 'http://172.16.0.29:6789/cqstcphome/#/home'
map_addr = 'http://172.16.0.29:6789/cqstcphome/#/e-map/index'

# home_addr='http://172.16.0.29:6789/cqstcphome_1'
# map_addr='http://172.16.0.29:6789/cqstcphome_1/#/e-map/index'

# home_addr='http://172.16.0.29:6789/cqstcp_home_2worker'

# map_addr='http://192.168.11.160/compare_d2c/d2c_better/d2c_better_vector_tdt.html'

# 输出文件名
out_file = 'outfile.txt'

# login_url='http://zhsq.digitalcq.com/bg_portal/systemManage/user/login.do'
login_url = 'http://192.168.11.89:8081/bg_portal/systemManage/user/login.do'

user_name = 'wangsiyu'
pass_word = 'sky_!@#123'

# cpu阈值
cpu_limit = 90

# 运动轨迹
arr = [
    [106.58358236184552, 29.568401400553967],
    [106.5773400083184, 29.576209652480216],
    [106.56810935141812, 29.579301541758312],
    [106.56155403267655, 29.578723044035854],
    [106.54526097648875, 29.57744124108754],
    [106.53671145677572, 29.572366328315155],
    [106.53564952893794, 29.56784147266349],
    [106.52653680974663, 29.56594566749412],
    [106.5168713074629, 29.56499418226028],
    [106.50655649726855, 29.566978939712],
    [106.49948084094342, 29.571019355720992],
    [106.48374869196732, 29.57732283009649],
    [106.4878881244374, 29.581553644573887],
    [106.50590989112573, 29.58463340460733],
    [106.51532264219884, 29.583062600812084],
    [106.52822063052008, 29.58330364908892],
    [106.53497979724239, 29.585608185295143],
    [106.54209547687424, 29.5879572636632],
    [106.55415331362747, 29.59161901488767],
    [106.56870542066144, 29.595413056819936],
    [106.5524552470041, 29.606449557668427],
    [106.5444729044591, 29.60665477504041],
    [106.53523537672777, 29.60593651254881],
    [106.54034230282718, 29.602643632665163],
    [106.55154127097876, 29.597242350658604],
    [106.57312928489182, 29.588846543622324],
    [106.5941362282233, 29.579922139325973],
    [106.57528394609244, 29.569807609727818],
    [106.56350020788523, 29.555106419034217],
    [106.54265942987774, 29.545552162785],
    [106.55401944254959, 29.530276423287347],
    [106.56823571793052, 29.521222576182865],
    [106.55538320662595, 29.511531662754308],
    [106.53220494490574, 29.512926842223436],
    [106.50911210831873, 29.51334680398361],
    [106.49057328766082, 29.51918015306103],
    [106.48399876072335, 29.526531595043423],
    [106.4818416421324, 29.531951425974256],
    [106.47502420955368, 29.536520238470274],
    [106.47858570234052, 29.541768670821412],
    [106.46926410147171, 29.550269644541885],
    [106.47732353500533, 29.554337342335046],
    [106.48813618111603, 29.559226283213874],
    [106.49502262263991, 29.566923611425395],
    [106.5119304331323, 29.57025136178501],
    [106.52885294899374, 29.575845169808062],
    [106.55547806209756, 29.575917135784138],
    [106.569038036596, 29.577479343360793],
    [106.59071653555088, 29.581906674719832],
    [106.6021540615742, 29.584822793488954],
    [106.6206115246373, 29.595649299127288],
    [106.60329555288536, 29.60079693432411],
    [106.58291180443882, 29.601401100498407],
    [106.5593669276684, 29.60450636705498],
    [106.53760391451021, 29.59820349474667],
    [106.51875401154325, 29.606963145946892],
    [106.49827669000183, 29.602207544112105],
    [106.48163476014304, 29.60605343784185],
    [106.4609836753292, 29.6155161013304],
    [106.48259435205466, 29.61595965511691],
    [106.49509642565658, 29.61990252982058],
    [106.50885216883967, 29.626202819778996],
    [106.52223955680392, 29.626937621830336],
    [106.53056565456745, 29.631978889663756],
    [106.53604790087434, 29.63592919976537],
    [106.5468851503332, 29.643235809868898],
    [106.53323000386138, 29.651083335441953],
    [106.50893676847284, 29.649201628063196],
    [106.49586546699788, 29.648085441353743],
    [106.46917124763615, 29.645786631853866],
    [106.45985871565688, 29.6541033319118],
    [106.48319773908088, 29.659334018567748],
    [106.49124436623993, 29.66054602407928],
    [106.50125676106632, 29.663069801761083],
    [106.51901870648794, 29.66899001915148],
    [106.53607826076495, 29.67970608932208],
    [106.51576669307292, 29.66900706500617],
    [106.49422197177853, 29.66042843068624],
    [106.47857363375783, 29.65066866345768],
    [106.46290833331432, 29.63960155663102],
    [106.45422361206909, 29.630913148509293],
    [106.43028577105497, 29.62356976614609],
    [106.41456794244311, 29.617490764830137],
    [106.39265476764763, 29.60822279144213],
    [106.40440401667911, 29.599130553491946],
    [106.37792702749175, 29.594171899880408],
    [106.35441557812806, 29.591109338726966],
    [106.33162353427929, 29.586544704182685],
    [106.3073441757465, 29.581465121905396],
    [106.28828597580991, 29.581254134319366],
    [106.26457286601953, 29.5863664346234],
    [106.2890392450895, 29.593350836642017],
    [106.27146476973292, 29.603539715339693],
    [106.28124617718049, 29.606718041521844],
    [106.3080537164717, 29.605786816151422],
    [106.33272356278303, 29.604158542956128],
    [106.35997221310186, 29.595786578578355],
    [106.38323548666631, 29.590950798449896],
    [106.40454978848777, 29.602426744150932],
    [106.41766405748047, 29.611055906719713],
    [106.41591021927889, 29.620478446351484],
    [106.49514029769398, 29.615992152374687]
]

work_flag = False
move_flag = False


def time_worker():
    global work_flag
    global move_flag

    print('测试开始...')
    print('------------------- start time --------------------',
          file=open(out_file, "a"))
    cpu_data = []
    memory_data = []
    while True:
        nowTime = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        cpu = psutil.cpu_percent(0.5)
        memory = psutil.virtual_memory().percent

        print(nowTime + " | cpu: " + (str)(cpu) +
              "%" + " | memory: " + (str)(memory) + "%", file=open(out_file, "a"))

        if move_flag:
            cpu_data.append(cpu)
            memory_data.append(memory)

        if work_flag:
            break

    print('-------------------- end time ---------------------',
          file=open(out_file, "a"))
    print('测试结束.')

    cpu_sum = 0
    memory_sum = 0

    cpu_ave = 0
    memory_ave = 0

    cpu_max_times = 0

    for i_cpu in cpu_data:
        cpu_sum = cpu_sum + i_cpu
        # config文件中的阈值
        if i_cpu >= cpu_limit:
            cpu_max_times = cpu_max_times + 1

    for i_memory in memory_data:
        memory_sum = memory_sum + i_memory

    cpu_ave = float('%.2f' % (cpu_sum/len(cpu_data)))
    memory_ave = float('%.2f' % (memory_sum/len(memory_data)))
    print('cpu平均值：'+(str)(cpu_ave) + '% | ' + 'cpu达到' + (str)(cpu_limit) + '%的次数：' +
          (str)(cpu_max_times) + ' | ' + 'memory平均值：' + (str)(memory_ave) + '%')


def map_worker():
    global work_flag
    global move_flag

    driver = webdriver.Chrome()
    driver.maximize_window()

    if need_login:
        m = hashlib.md5()
        # config文件中的密码
        b = pass_word.encode(encoding='utf-8')
        m.update(b)
        passwd_md5 = m.hexdigest()

        data = {'userName': user_name, 'password': passwd_md5}
        r = requests.post(login_url, data)
        cookie_str = "'Admin-Token=" + r.headers['AUTH_TOKEN'] + "'"

        driver.get(home_addr)
        driver.execute_script('document.cookie = ' + cookie_str)

    sleep(1)
    driver.get(map_addr)
    sleep(10)

    print('------------------- start move --------------------',
          file=open(out_file, "a"))
    print('开始移动...')
    move_flag = True

    driver.execute_script(
        'd2cMap.setCenter([106.57577176873292,29.565013976572004])')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(8)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(9)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(10)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(11)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(12)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(13)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(14)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(15)')
    sleep(1)
    driver.execute_script('d2cMap.setZoom(16)')
    sleep(1)

    # config 文件中的arr
    for i in arr:
        driver.execute_script('d2cMap.setCenter(' + (str)(i) + ')')
        sleep(1)

    print('-------------------- end move ---------------------',
          file=open(out_file, "a"))
    print('结束移动，请等待...')
    move_flag = False

    sleep(5)

    work_flag = True


t1 = threading.Thread(target=time_worker, name='time_worker')
t2 = threading.Thread(target=map_worker, name='map_worker')

t1.start()
t2.start()
